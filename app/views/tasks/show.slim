h1.page-header
  = link_to enabled(@task.enabled), toggle_task_path(@task), method: :patch, class: "text-muted"
  '
  ' #{@task.name}
  '
  - if @task.failed?
    span.label.label-danger Failed
  - if @task.running?
    span.label.label-info Running
  '
  = link_to 'Edit', edit_task_path(@task), class: 'btn btn-primary btn-inline'

- if @task.instances.empty?
  = render 'tasks/empty'
- else
  .row
    .col-md-6: .panel: .list-group
      = list_item "Starting at", @task.run_at
      = list_item "Runs every", "#{@task.interval} #{@task.scalar}"\
                  " #{ra = @task.run_at; ra && " starting at #{ra}"}"
      = list_item "Script", link_to(@task.script, @task.script.to_s, target: "_blank")
    .col-md-6: .panel: .list-group
      = list_item "Last run", about_time(@task.last_run.localtime)
      = list_item "Average runtime", @task.runtime.average.human_time
      = list_item "Standard Deviation", "&plusmn; #{@task.runtime.standard_deviation.human_time}".html_safe

  - @logs.group_by(&:instance).each do |header, logs|
    - h = "Started: " << l(header.created_at.localtime, format: :human) << "<br>Finished: " << l(header.finished_at.localtime, format: :human) << "<br>Duration: #{header.duration.human_time}"
    = logs_list(logs, header: h.html_safe)
  .text-center = paginate @logs
  / = logs_list(@task.instances.last.logs.reverse, header: true)
